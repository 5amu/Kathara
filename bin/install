#!/bin/bash

SKIP_P4=1
NOT_ADMIN=1
for i in "$@"
do
case $i in
    --p4)
    SKIP_P4=0
    #shift 
    ;;
    --admin)
    NOT_ADMIN=0
    #shift 
    ;;
    *)
    #shift
    ;;
esac
done

sudo true

if [ "$NOT_ADMIN" = "1" ]; then
    echo "Compiling netkit_dw"
    sudo gcc -std=c99 $NETKIT_HOME/wrapper/netkit_dw.c -o $NETKIT_HOME/wrapper/bin/netkit_dw
else
    echo -e "\033[0;33mAdmin mode\033[0m"
    echo -e "\033[0;31mWARNING: This will not create a wrapper or remove it if previously installed.\033[0m"
    echo -e "\033[0;33mIt will also require sudo to start network nodes and access them.\033[0m"
    sudo rm $NETKIT_HOME/wrapper/bin/netkit_dw
    sudo cp $NETKIT_HOME/wrapper/bin/fake_wrapper $NETKIT_HOME/wrapper/bin/netkit_dw
fi

echo "Setting permissions"
if [ "$NOT_ADMIN" = "1" ]; then
    sudo chown 0:0 $NETKIT_HOME/wrapper/bin/netkit_dw
    sudo chmod 4755 $NETKIT_HOME/wrapper/bin/netkit_dw
    sudo chattr -i $NETKIT_HOME/wrapper/bin/netkit_dw
    sudo chmod 000 $NETKIT_HOME/wrapper/netkit_dw.c
    sudo rm $NETKIT_HOME/../config
    echo "unix_bin=$NETKIT_HOME/wrapper/bin/netkit_dw" > $NETKIT_HOME/../config
    
else 
    sudo rm $NETKIT_HOME/../config
    echo "unix_bin=sudo docker" > $NETKIT_HOME/../config
fi

sudo chown 0:0 $NETKIT_HOME/*
sudo chown 0:0 $NETKIT_HOME/python/*
sudo chown 0:0 $NETKIT_HOME/../config

sudo chmod 755 $NETKIT_HOME/../config


mkdir -p $HOME/netkit_temp
mkdir -p $HOME/netkit_temp/labs

sudo chmod 755 $HOME/netkit_temp
sudo chmod 755 $HOME/netkit_temp/labs

sudo chmod 755 $NETKIT_HOME/install

sudo chmod 755 $NETKIT_HOME/brctl_config

sudo chmod 755 $NETKIT_HOME/lstart
sudo chmod 755 $NETKIT_HOME/lrestart
sudo chmod 755 $NETKIT_HOME/lclean
sudo chmod 755 $NETKIT_HOME/lcrash
sudo chmod 755 $NETKIT_HOME/lhalt
sudo chmod 755 $NETKIT_HOME/lcrash_legacy
sudo chmod 755 $NETKIT_HOME/lhalt_legacy
sudo chmod 755 $NETKIT_HOME/linfo
sudo chmod 755 $NETKIT_HOME/lwipe

sudo chmod 755 $NETKIT_HOME/ltest

sudo chmod 755 $NETKIT_HOME/vstart
sudo chmod 755 $NETKIT_HOME/vclean
sudo chmod 755 $NETKIT_HOME/vcrash
sudo chmod 755 $NETKIT_HOME/vhalt
sudo chmod 755 $NETKIT_HOME/vcrash_legacy
sudo chmod 755 $NETKIT_HOME/vhalt_legacy
sudo chmod 755 $NETKIT_HOME/vlist
sudo chmod 755 $NETKIT_HOME/vconfig

sudo chmod 755 $NETKIT_HOME/kathara_version
sudo chmod 755 $NETKIT_HOME/kathara_version.txt

sudo chmod 755 $NETKIT_HOME/python
sudo chmod 755 $NETKIT_HOME/python/*

if [ "$SKIP_P4" = "1" ]; then
    echo "Pulling images"
    sudo docker pull kathara/netkit_base
    sudo docker pull alpine
else
    echo "Pulling images"
    sudo docker pull kathara/netkit_base
    sudo docker pull alpine
    sudo docker pull kathara/p4
fi

sudo -k
